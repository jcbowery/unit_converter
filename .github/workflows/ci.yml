name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18.2'
          otp-version: '27.1'

      - name: Cache Mix deps
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-

      - name: Install dependencies
        run: mix deps.get

      - name: Cache _build
        uses: actions/cache@v3
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-build-

  lint:
    name: Lint code
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18.2'
          otp-version: '27.1'

      - name: Install dependencies
        run: mix deps.get

      - name: Lint (format check)
        run: mix format --check-formatted

      # Optional: Uncomment if using Credo
      - name: Credo
        run: mix credo

  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.18.2'
          otp-version: '27.1'

      - name: Install dependencies
        run: mix deps.get

      - name: Run tests
        run: mix test

  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: [lint, test]

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/unit_converter
          docker build -t $IMAGE_NAME:latest .
          docker push $IMAGE_NAME:latest
